#!/usr/bin/env perl
#   -Creates an *.html file for each input file that doesn't already have one,
#    converting from markdown.
#
#   USAGE: $0 *.mkd

use 5.012;
use Text::Markdown 'markdown';
use File::Basename;
use Template;
use File::Slurp;
use JSON;

# CONFIG
my $template_file = "template.html.tt";
my $specfile = "analysis.json";

my $spec = decode_json(read_file($specfile)) or die "Can't read $specfile:$!";

print "Converting markdown files to HTML..\n";
my $tt = Template->new;
foreach (@ARGV){
    # Get HTML file name
    my ($basename) = fileparse($_, ".markdown");
	my $outfile = "$basename.html";
	if (-e $outfile) {
        print "\t$outfile exists.  Skipping.\n";
        next;
    };

    # Get contents of markdown file
    open my $input, $_;
    my $content = markdown(join '', <$input>);
    close $input;

    # Assemble data and process template into HTML
	say "$_ => $outfile\n";
    open my $output, ">$outfile";
    $spec->{pagename} = $basename;
    $spec->{content} = $content;
    $tt->process(
        $template_file, 
        $spec,
        $output
    ) or die "Template Error: " . $tt->error();

    close $output;
}
