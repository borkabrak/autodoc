#!/usr/bin/env perl
#
#   Create a JSON file containing everything we can determine about the source (e.g., KAML element names)

use strict;
use 5.012;

use JSON;
my $json = JSON->new;

use Data::Dumper;

my $apifile ="/cygdrive/c/TFS/Data\ Intelligence\ Tool/src/ditool/DEV/api.js";
my $output_directory = '/home/jcarter/ditool/didoc/bin/markdown';
my $analysis_file = '/home/jcarter/ditool/didoc/bin/analysis.json';
my $data = {};

say "Creating code analysis..";

#==============================================================================
say "Analyzing KAML..";
$data->{ kaml_elements } = find_in_file(qr/(di_\w+)/i, $apifile);


# save JSON to file, then change the Makefile to use this before making the analysis deeper.
open JSONFILE, ">", $analysis_file or die "Can't open $analysis_file:$!";
print JSONFILE $json->pretty->encode($data);

say "Analysis created at $analysis_file";
#==============================================================================
sub find_in_file {
    # Returns a (reference to a) sorted, unique array of all matches for $regex
    # on the contents of $file
    my ($regex, $file) = @_;
    open (INPUT, "<", $file) or die "Can't open '$file':$!";
    my $input = join ' ' , <INPUT>;
    close INPUT;
    my @output = sort keys %{{ map { lc($_) => 1 } $input =~ /$regex/g }};
    return \@output;
}
